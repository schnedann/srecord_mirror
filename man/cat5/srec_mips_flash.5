srec_mips_flash.5(5)          File Formats Manual         srec_mips_flash.5(5)



NNAAMMEE
       srec_mips_flash - MIPS-Flash file format

DDEESSCCRRIIPPTTIIOONN
       The  MIPS  SDE  tool chain has a _c_o_n_v_e_r_t program that is able to output
       this format.  I have no idea what reads it, some kind of flash program-
       mer I suppose.

   FFoorrmmaatt
       The  file must start with '!R' to reset the state machine.  White space
       appears to be ignored, except as it serves to separate tokens.

       Data is presented as 32-bit hexadecimal numbers,  in  the  normal  big-
       endian  text  number format.  To write them to memory, you have to know
       if the target is big-endian or little-endian. for  little  endian  tar-
       gets, reverse the order of the bytes in this number.

       The  eight  bytes  following a '>' are a sort of comment.  The SDE code
       reads like they are displayed in the flash  programmer  as  a  kind  of
       progress indicator.

       The number following '@' is a new address for the following data.

       Each segment must be erased before it can be written, this is done with
       the '!E' command.  Each segment is assumed to be 128kB in size.

       Special segments must unlocked (with the '!C' command) and locked again
       (with the '!S' command).

       This file format contains no checksum mechanism.

   CCoommmmaanndd LLiinnee OOppttiioonnss
       This  format  is  specified  using one of the --MMiippss--FFllaasshh--BBiigg__EEnnddiiaann or
       --MMiippss--FFllaasshh--LLiittttllee__EEnnddiiaann options.  The endian-ness must  be  specified
       on  the  command line, because there is nothing in the file contents to
       indicate the endian-ness of the data it contains.

   SSiizzee MMuullttiipplliieerr
       In general, binary data will expand in sized by approximately 2.3 times
       when represented with this format (worse if you use shorter lines).

EEXXAAMMPPLLEE
       Here  is  an  example  MIPS-Flash  file.   It contains the data "Hello,
       World" to be loaded at bytes address 0x0000  (but  remember,  the  file
       contents are always multiples of four bytes).
              !R
              >00000xxx @00000000 !E
              @00000000
              >00000000
              48656C6C 6F2C2057 6F726C64 210A0000
              >#DL_DONE
              >FINISHED

CCOOPPYYRRIIGGHHTT
       _s_r_e_c___c_a_t version 1.64
       Copyright  (C)  1998,  1999,  2000, 2001, 2002, 2003, 2004, 2005, 2006,
       2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Peter Miller

       The _s_r_e_c___c_a_t program comes with ABSOLUTELY NO WARRANTY; for details use
       the '_s_r_e_c___c_a_t _-_V_E_R_S_i_o_n _L_i_c_e_n_s_e' command.  This is free software and you
       are welcome to redistribute it under certain  conditions;  for  details
       use the '_s_r_e_c___c_a_t _-_V_E_R_S_i_o_n _L_i_c_e_n_s_e' command.

MMAAIINNTTAAIINNEERR
       Scott Finneran   E-Mail:   scottfinneran@yahoo.com.au
       Peter Miller     E-Mail:   pmiller@opensource.org.au

CCOOPPYYRRIIGGHHTT
       _s_r_e_c___c_a_t version 1.64
       Copyright  (C)  1998,  1999,  2000, 2001, 2002, 2003, 2004, 2005, 2006,
       2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Peter Miller

       The _s_r_e_c___c_a_t program comes with ABSOLUTELY NO WARRANTY; for details use
       the '_s_r_e_c___c_a_t _-_V_E_R_S_i_o_n _L_i_c_e_n_s_e' command.  This is free software and you
       are welcome to redistribute it under certain  conditions;  for  details
       use the '_s_r_e_c___c_a_t _-_V_E_R_S_i_o_n _L_i_c_e_n_s_e' command.

MMAAIINNTTAAIINNEERR
       Scott Finneran   E-Mail:   scottfinneran@yahoo.com.au
       Peter Miller     E-Mail:   pmiller@opensource.org.au



Reference Manual                    SRecord               srec_mips_flash.5(5)
