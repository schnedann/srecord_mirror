srec_motorola(5)              File Formats Manual             srec_motorola(5)



NNAAMMEE
       srec_motorola - Motorola S-Record hexadecimal file format

DDEESSCCRRIIPPTTIIOONN
       This format is also known as the _E_x_o_r_c_i_s_e_r, _E_x_o_r_m_a_c_s or _E_x_o_r_m_a_x format.

       Motorola's S-record format allows binary files to be uploaded and down-
       loaded between two computer systems.  This type  of  format  is  widely
       used  when  transferring  programs  and  data between a computer system
       (such as a PC, Macintosh, or workstation) and an emulator or evaluation
       board for Motorola microcontrollers and microprocessors.

   TThhee LLiinneess
       Most  S-Record file contain only S-Record lines (see the next section),
       which always start with a capital S character.  Some  systems  generate
       various  "extensions[rq]  which  usually  manifest as lines which start
       with something else.  These "extension[rq] lines may or may  not  break
       other systems made by other vendors.  Caveat emptor.

   TThhee FFiieellddss
       The  S-Record  format  consists  of 5 fields. These are the type field,
       length field, address field, data field, and the checksum.   The  lines
       always start with a capital S character.

               +--+------+---------------+---------+------+----------+
               |S | Type | Record Length | Address | Data | Checksum |
               +--+------+---------------+---------+------+----------+
       Type    The  type  field  is a 1 character field that specifies whether
               the record is an S0, S1, S2, S3, S5, S6, S7, S8 or S9 field.

       Record Length
               The record length field is a 2 character (1  byte)  field  that
               specifies  the number of character pairs (bytes) in the record,
               excluding the type and record length fields.

       Address This is a 2-, 3- or 4-byte address  that  specifies  where  the
               data in the S-Record is to be loaded into memory.

       Data    The  data  field  contains the executable code, memory-loadable
               data or descriptive information to be transferred.

       Checksum
               The checksum is an 8-bit field that represents the  least  sig-
               nificant  byte of the one's complement of the sum of the values
               represented by the pairs of characters making up  the  record's
               length, address, and data fields.

   RReeccoorrdd TTyyppeess
       S0      This  type  of record is the header record for each block of S-
               Records.  The data field may contain any  descriptive  informa-
               tion identifying the following block of S-Records.  (It is com-
               monly "HDR[rq] on many systems.)  The address field is normally
               zero.

       S1      A  record  containing  data and the 2-byte address at which the
               data is to reside.

       S2      A record containing data and the 3-byte address  at  which  the
               data is to reside.

       S3      A  record  containing  data and the 4-byte address at which the
               data is to reside.

       S5
               An optional record containing the  number  of  S1,  S2  and  S3
               records  transmitted  in a particular block.  The count appears
               in the two-byte address field.  There is no data field.

               This record is optional, you do not have  to  use  it.   Nobody
               knows  if  you can have more than one in a file; and if you do,
               nobody knows whether or not the line count  resets  after  each
               one.

               The  _s_r_e_c___c_a_t command will only ever use one, provided the num-
               ber of lines fits in 16 bits, otherwise it will use S6.

                      S6
                              An optional record containing the number of  S1,
                              S2  and  S3  records transmitted in a particular
                              block.  The  count  appears  in  the  three-byte
                              address field.  There is no data field.

                              This  record is optional, you do not have to use
                              it.  Nobody knows if you can have more than  one
                              in  a  file; and if you do, nobody knows whether
                              or not the line count resets after each one.

                              Nobody knows what happens if you mix S5  and  S6
                              records in a file.

                              The  _s_r_e_c___c_a_t  command  will  only ever use one,
                              provided the number of lines fits in 24 bits.

                      S7      A termination record for a block of S3  records.
                              The address field may contain the 4-byte address
                              of the instruction to which control  is  passed.
                              There is no data field.

                      S8      A  termination record for a block of S2 records.
                              The address field  may  optionally  contain  the
                              3-byte  address of the instruction to which con-
                              trol is passed.  There is no data field.

                      S9      A termination record for a block of S1  records.
                              The  address  field  may  optionally contain the
                              2-byte address of the instruction to which  con-
                              trol  is  passed.   If  not specified, the first
                              entry point  specification  encountered  in  the
                              object  module  input will be used.  There is no
                              data field.

   SSiizzee MMuullttiipplliieerr
       In general, binary data will expand in sized by approximately 2.4 times
       when represented with this format.

EEXXAAMMPPLLEE
       Here  is  an  example  S-Record  file.   It  contains  the data "Hello,
       World[rq] to be loaded at address 0.
              S00600004844521B
              S110000048656C6C6F2C20576F726C640A9D
              S5030001FB
              S9030000FC

CCOOPPYYRRIIGGHHTT
       _s_r_e_c___c_a_t version 1.64
       Copyright (C) 1998, 1999, 2000, 2001, 2002,  2003,  2004,  2005,  2006,
       2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Peter Miller

       The _s_r_e_c___c_a_t program comes with ABSOLUTELY NO WARRANTY; for details use
       the '_s_r_e_c___c_a_t _-_V_E_R_S_i_o_n _L_i_c_e_n_s_e' command.  This is free software and you
       are  welcome  to  redistribute it under certain conditions; for details
       use the '_s_r_e_c___c_a_t _-_V_E_R_S_i_o_n _L_i_c_e_n_s_e' command.

MMAAIINNTTAAIINNEERR
       Scott Finneran   E-Mail:   scottfinneran@yahoo.com.au
       Peter Miller     E-Mail:   pmiller@opensource.org.au



Reference Manual                    SRecord                   srec_motorola(5)
